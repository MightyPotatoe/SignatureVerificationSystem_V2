function [Y,Xf,Af] = siec4(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 17-Jun-2017 13:44:44.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 48xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_remove = [3 4 7 8 11 12 15 16 19 20 23 24 27 28 31 32 35 36 39 40 43 44 47 48];
x1_step1_keep = [1 2 5 6 9 10 13 14 17 18 21 22 25 26 29 30 33 34 37 38 41 42 45 46];
x1_step2_xoffset = [89;0;0;0;265;0;0;0;140;0;9;0;78;11;242;16;147;0;0;0;0;0;9;0];
x1_step2_gain = [0.00213675213675214;0.0487804878048781;0.00231749710312862;0.0487804878048781;0.0021953896816685;0.0434782608695652;0.00181159420289855;0.0540540540540541;0.0018450184501845;0.0465116279069767;0.00169635284139101;0.0689655172413793;0.00215982721382289;0.0350877192982456;0.00220264317180617;0.0465116279069767;0.00190657769304099;0.0294117647058824;0.00240673886883273;0.0588235294117647;0.00185873605947955;0.0588235294117647;0.00173611111111111;0.0384615384615385];
x1_step2_ymin = -1;

% Layer 1
b1 = [1.6191560853398139;1.4237508033180151;0.13347194182138353;-0.058922627241436917;-0.72128060306592268;-0.5466454640450773;0.32349281366643134;-1.1661020998672023;-1.1361075099368592;-1.5555484126816792];
IW1_1 = [-0.20382883471949731 -0.41995822189945653 -0.69954281335663926 0.42996525809763042 -1.2741185517328084 1.275474948601786 -0.90644417594602145 0.32621119698610285 0.52440113187119031 -0.63541455328827912 0.21588572544371182 0.30339708930961418 0.14430200119321968 -0.16963272508051586 -1.1844094221669521 -0.042991294111161142 0.22873965952854391 -0.14774363060221413 -0.48079341959159971 -0.86156882450140504 -0.27476719682618772 0.22527638614530437 -0.14698966401380426 0.086298752901605949;-0.18933984660040593 -0.33915248862842851 0.08348302775296311 -0.16139217093642017 0.24736920022716069 -0.29775737131923924 0.084337407021276622 -0.20814273790923257 -0.068920793114162077 0.44999894219599001 -0.3688711251660699 -0.550496682082524 0.32723490079839468 -0.35723347506333908 -0.055953084145790553 -0.099835290598523252 -0.45449406683323645 0.092489499245293399 -0.034257158843230891 0.16501526819621895 -0.097522470664236791 -0.58039209555183446 -0.31125956795611193 -0.14741766457724306;0.1268911734649032 -0.42311749518891517 -0.033205808379169331 0.09961290332071765 -1.0478743779697774 0.41297026801369779 -0.57015697611326566 0.7103519959649166 0.81322067252688657 -0.81139072434685544 0.3258032270380733 -0.64030719118892443 -0.22411333608529213 -0.51378013461171879 -0.48755638798296336 0.093356304247856362 0.048660816485580481 0.64019255255692686 -0.33887291360863203 -0.38272697363096614 -1.0131414168419826 -0.76375205417145642 -0.030340416212232754 0.21257511463265977;-0.15563966719391059 0.74559017504385472 -0.31683352768536593 0.12648916469793262 -0.0054119610972787847 -0.55480984336493966 0.40541570821055278 -0.054618297968912349 -0.23044497862959568 -0.11552446119850969 0.33480713623315744 -0.020071380897059 -0.012616412027107666 -0.3472158494296918 0.63786195200261486 0.14659790990961208 -0.81473355774199885 -0.36003734515574831 -0.058389283863907945 0.79990625321476072 0.76522888368025854 0.11758360170005508 0.55521663841045643 -0.20258210506272892;0.53975511983364932 0.53216085182651773 0.040200396148915359 -0.54647998923918251 0.90447821270234885 -0.26370342622772969 0.18430501888809345 -0.89541014258231622 0.02328403644857403 1.1024782860269917 0.23765760960300339 -0.034854603895845111 0.093980457298593723 0.57491812486534966 0.80282081249123438 0.53260309028884834 -0.22559218619101765 -0.52892648278452914 0.33556926560921979 -0.049938760854991979 0.54083656805359492 0.2023631683508573 -0.0790513781357636 0.17649825103650943;-0.52773669892587094 0.67097751631223701 0.41976305717419848 0.074695258680280943 0.37582223467630621 -0.48558367711556016 0.40445711572101156 0.11526467010402767 0.23365913407541511 0.48264307285534569 0.1426925042776333 -0.20408828987331465 -0.26712413553042103 0.32808700522526218 0.79072256469115298 0.17720109458068581 -0.31297042887313598 0.36350634445278923 0.27936689906480233 0.017642566246340988 0.3325192311248733 0.39686655095457307 -0.18331358853241383 -0.13955903985801016;-0.013128624367274799 0.3784940948324188 0.6772299471053318 -0.35057968289181557 0.69753617459392947 0.0051106568224761027 0.42550182485056776 -0.2375966250144417 -0.35890469935554181 -0.39610118924502496 -0.38882983756346418 -0.45147894972564895 -0.24884676496591088 -0.53450826422307296 0.62341215483171986 0.26065159079627392 0.55467949401922201 0.002004552202426001 0.52016377474224373 -0.045237567811335984 0.023039652531224954 0.52557979817403278 0.070216975610887133 -0.092850063860005175;-0.39096557207651789 -0.045626462697181361 0.15642303525217136 -0.11919969947197304 -0.40347934989555362 -0.039196762722178209 0.55896092792735474 0.24271179539447396 -0.15372719168319227 -0.019704937187351151 -0.15409934782592213 0.23329037379339651 0.22146644099092433 -0.17442271564948444 -0.363071509057248 0.24581410335485834 0.40232246528188204 0.18397065294345299 -0.32317992852718891 0.5938186584057028 0.29944206429775944 0.35766605571810284 0.31771296425775364 0.28631762515399678;-0.22554177855544713 -0.21959932328981649 -0.27104212474042011 0.34785905066377781 0.7869312983371054 -0.45977477131551431 0.071556351618702385 -0.61180117962002178 -0.4879653258542751 0.36530535883765314 -0.018478700657789095 0.28302838489673549 0.11049289288701712 -0.49415044540483188 0.25988133729129137 -0.0886302746636424 0.31854735764670894 -0.3386469515455397 -0.19752982372138678 0.35959964172970182 0.048307320546484567 -0.43273246146466293 -0.24614160277516989 0.12902517922657761;-0.17169716765153453 0.2845823643981083 0.29131573584929554 -0.24624834033632442 0.37743290785715222 -0.34533706673587639 0.3724464358594396 0.49521688120585994 -0.11378624520851442 0.39400821250273799 -0.38979565245791831 -0.23522906301107688 -0.070918498569386465 0.17807892235085973 -0.44256434449179838 0.1234422573290713 -0.26869105146795969 0.32351666426210668 -0.41451420524971538 0.41830657714887126 -0.41319246875220955 0.20198968084315225 -0.054397804829967707 0.3616099379227441];

% Layer 2
b2 = [-0.73316832437410806;-0.39474624053888985];
LW2_1 = [-2.5299026588833682 -0.61135074913793197 -1.9349066165962512 1.1740605834222391 1.5359017981686733 0.99487729849963857 0.45606569962142435 0.63921397660334034 0.53511253622684041 -0.02067949293556718;1.6544395094181306 -0.11701230421288822 1.3597494998765203 -0.82474374788106064 -1.5210530861440719 -0.96339658032327025 -1.1349547969775484 -0.28050420854602631 -0.646305119088182 0.072954149972216817];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1_keep,x1_step1_remove);
    Xp1 = mapminmax_apply(temp,x1_step2_gain,x1_step2_xoffset,x1_step2_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings_keep,settings_remove)
if isempty(settings_remove)
    y = x;
else
    y = x(settings_keep,:);
end
end

% Competitive Soft Transfer Function
function a = softmax_apply(n)
nmax = max(n,[],1);
n = bsxfun(@minus,n,nmax);
numer = exp(n);
denom = sum(numer,1);
denom(denom == 0) = 1;
a = bsxfun(@rdivide,numer,denom);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
