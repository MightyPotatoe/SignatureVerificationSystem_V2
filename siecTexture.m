function [Y,Xf,Af] = siecTexture(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 17-May-2017 20:48:41.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 48xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_remove = [3 4 7 8 11 12 15 16 19 20 23 24 27 28 31 32 35 36 39 40 43 44 47 48];
x1_step1_keep = [1 2 5 6 9 10 13 14 17 18 21 22 25 26 29 30 33 34 37 38 41 42 45 46];
x1_step2_xoffset = [89;0;0;0;265;0;0;0;140;0;9;0;78;11;242;16;147;0;0;0;0;0;9;0];
x1_step2_gain = [0.00213675213675214;0.0487804878048781;0.00231749710312862;0.0487804878048781;0.0021953896816685;0.0434782608695652;0.00181159420289855;0.0540540540540541;0.0018450184501845;0.0465116279069767;0.00169635284139101;0.0689655172413793;0.00215982721382289;0.0350877192982456;0.00220264317180617;0.0465116279069767;0.00190657769304099;0.0294117647058824;0.00240673886883273;0.0588235294117647;0.00185873605947955;0.0588235294117647;0.00173611111111111;0.0384615384615385];
x1_step2_ymin = -1;

% Layer 1
b1 = [-1.5444088203518727;1.3642763759999044;1.2092566100073112;0.19838081729705606;1.9549584009157903;0.2981030279342447;0.61717822410934708;-0.046300801463882595;-1.122772484422518;1.6585689445727292];
IW1_1 = [0.09106465929825304 -0.46958898135604626 -0.19202508883178773 -0.0068426573439764804 0.2920484206832058 0.48494398844266756 -0.31698541360202603 0.074225195792773466 0.25781336414190342 0.23217511027363094 -0.29747169715886512 0.40666325166771944 0.53631361834506419 -0.10124481076464475 -0.42848522845845732 -0.50252511782336107 0.11632839449681771 -0.017575055357900528 -0.3992386022408963 0.33995377141842303 0.49650621904909081 -0.098714117634271098 0.29639091776108073 -0.041556902693926118;-0.38472210856988259 -0.1284231444161128 -0.32270955465557999 0.18435607223494857 -0.10359197508736871 1.0430595807511744 -0.28613637485803922 -0.24966354504526889 -0.0070916251870547509 -0.41020231768756765 -0.044724325586097263 0.063220037564327508 0.52144518826506436 -0.066091541339658291 -0.48807421746836638 -0.40509422150274721 0.3638989291550585 0.50424679873164324 -0.44074099896126195 0.23598645987875719 -0.37675109385875999 0.4536866405362705 -0.34322553063031686 -0.18879102002450174;-0.363863249457405 0.19561183949198485 -0.12107425112047221 -0.087876476168501874 -0.46009704498102272 0.86727765704024629 -0.1071936386956934 0.32381466667678804 0.12829121431093232 -0.57638097068829297 0.40852181150660716 0.66504177706142487 -0.37434465266356903 -0.44940904868726483 -1.2236475040125747 -0.53045375387993676 0.14799310852079192 0.12593957721773788 -0.10578095038271729 0.33530567343757989 -0.072580311172020462 -0.099548163741010484 -0.53783599185833864 -0.023628859529655752;-0.15400273113984317 -0.26883749452135508 0.29511244989818375 -0.20747852209408024 0.23193376661032394 0.054341354352714172 -0.019867427312360575 0.046449512873234858 0.29914834324871314 0.95761102297511747 0.42353725407247578 -0.54905178098365659 0.5360286995887098 0.43337593905979271 0.34309913391802094 0.17324724080985343 0.13436959837508944 0.3433792654868113 -0.44927204425449263 0.61442804577395604 0.24912597431256214 -0.44334921635084207 0.36628906952301993 0.14512218660279991;-0.42974812798533168 -0.84679383575172062 -0.48319338216128416 1.2630009186584688 -2.2296037105234756 1.6583606941104823 -1.0820175048768021 0.72055046885376073 0.77335826783059514 -1.8437605761522406 0.45183381212886214 0.034187327969037257 0.37371870050927158 -0.96687143887950888 -1.3037242127030391 -0.28214988420368681 0.44857620279152327 0.90703757696187293 -0.61900511414000292 -1.6805653655433368 -1.1293830257187834 -0.13478935315566315 -0.24982801195748944 0.20608857107813353;-0.22368027236273813 -0.5063981853538807 -0.29781224804298645 0.50175022320676077 -1.4639823150944167 0.95979534431311631 -0.21391383098149108 -0.47226361745841811 -0.1167025313294673 -0.74118256643564795 0.28331784495509199 -0.29260104162116463 0.39382381840343539 -0.17790812104497694 -1.1377626530491014 -0.024812186010927269 -0.31137423784778617 0.56263274418119247 -0.66253301225530314 -0.58756235228197251 -0.96538901693419288 0.3143832988162461 0.012211635199456261 0.25420078334614671;0.38092390099914786 -0.88458276674625391 0.21965530965905558 0.040364793241269029 -0.6319835728324219 0.86815888204586378 -0.8359936614390121 0.43510067813370962 0.54118229487529879 -0.68434105173493209 0.32299650831396021 -0.0317130074591662 0.12026308556473274 -0.47863712740450215 -0.52620276198123328 -0.067969951461634287 0.4429466382780326 -0.1835451315395884 0.22611163782606042 -0.98281963793351712 -0.36858851032489293 -0.14874624166051445 -0.085738715668232518 -0.1874833608080036;0.11248719813382818 -1.1433596838710962 -0.25181167898461876 -0.42480451461195828 -0.49737031936045406 0.58099123495017002 -0.71266320754735657 0.44223527310522454 0.7254356626657541 -0.65871251568665123 0.10370111430112579 -0.70545935402476734 -0.29026251841647771 -0.084576398876423556 -0.84102116844885777 0.32946846609838099 0.76934164108636938 -0.14701786404387279 0.26979129609728963 -0.72202320320329161 -0.51123203947198148 -0.0065054234587676816 -0.18536304737838513 -0.20886517822858436;-0.036983589532357371 0.19132222002142116 -0.16929659417403448 -0.026175269132665158 0.22808098068746049 -0.16409309487254653 -0.43843129312842521 0.30947904219890449 0.13944906674544527 -0.41236091632662741 -0.30083225119564849 0.41842107154948405 -0.27658032285342793 0.24024900225299345 -0.15508132347446874 0.15388145060101752 -0.30876337675070231 -0.26332816450569302 0.48213612264350564 0.44698278110439582 -0.55085936918972322 0.068407403180801504 0.43985194265027039 0.52727257660787896;0.13414644387149172 0.48001900148495036 0.42901930316276798 0.28761756884436801 0.15836283962688391 -0.20081099260585825 -0.25944034244448283 0.41632687639143412 -0.056112312882696545 0.36014583495579577 -0.21254080782741894 -0.37743034016741239 0.27645721352480485 -0.35969614893565188 -0.32041295786454094 -0.33777165148857136 -0.12295076141268524 0.39731382670222348 0.18534357742102847 -0.40936899710278712 0.17547468165040817 -0.54339254148540117 0.073806373498532155 0.24384658038796753];

% Layer 2
b2 = [-1.2266144759525888;-0.34107712751838204];
LW2_1 = [0.52542015584798252 -1.1464597599273585 -1.4775180512976318 1.1218857190428506 -4.2602860659503108 -2.0430117206453833 -1.427630777034075 -1.492977167666913 -0.27281332023024907 -0.79455882159735702;-0.57685321986090976 0.97124728863500698 1.156828747281607 -0.60873678856183611 4.3684239463814745 1.8239259905494984 1.6611020085758632 1.3167474298633888 -0.30574020241947603 0.88985110457209537];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    temp = removeconstantrows_apply(X{1,ts},x1_step1_keep,x1_step1_remove);
    Xp1 = mapminmax_apply(temp,x1_step2_gain,x1_step2_xoffset,x1_step2_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings_keep,settings_remove)
if isempty(settings_remove)
    y = x;
else
    y = x(settings_keep,:);
end
end

% Competitive Soft Transfer Function
function a = softmax_apply(n)
nmax = max(n,[],1);
n = bsxfun(@minus,n,nmax);
numer = exp(n);
denom = sum(numer,1);
denom(denom == 0) = 1;
a = bsxfun(@rdivide,numer,denom);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
